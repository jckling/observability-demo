version: '3.8'

x-logging:
  &loki-logging
  driver: loki
  options:
    loki-url: "http://localhost:3100/loki/api/v1/push"

services:
  prometheus:
    image: prom/prometheus 
    container_name: prometheus
    restart: unless-stopped
    logging: *loki-logging
    volumes:
      - ./prometheus:/etc/prometheus
      - ./prometheus_data:/prometheus/data
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
    ports:
      - '9090:9090'
    networks:
      - monitoring

  pushgateway:
    image: prom/pushgateway
    container_name: pushgateway
    restart: unless-stopped
    logging: *loki-logging
    ports:
      - '9091:9091'
    networks:
      - monitoring

  alertmanager:
    image:  prom/alertmanager
    container_name: alertmanager
    restart: unless-stopped
    logging: *loki-logging
    volumes:
      - ./alertmanager:/config
      - ./alertmanager_data:/alertmanager/data
    command:
      - '--config.file=/config/alertmanager.yaml'
    ports:
      - '9093:9093'
    networks:
      - monitoring

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
    logging: *loki-logging
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
      - ./grafana_data:/var/lib/grafana
    ports:
      - '3000:3000'
    networks:
      - monitoring

  loki:
    image:  grafana/loki
    container_name: loki
    restart: unless-stopped
    volumes:
      - ./loki:/etc/loki
      - ./loki_data:/loki
    command:
      - '--config.file=/etc/loki/loki.yaml'
    ports:
      - '3100:3100'
    networks:
      - monitoring

  promtail:
    image: grafana/promtail
    container_name: promtail
    restart: unless-stopped
    volumes:
      - ./promtail:/etc/promtail
      - ./nginx_data:/var/log/nginx
    command:
      - '--config.file=/etc/promtail/promtail.yaml'
    networks:
      - monitoring

  consul:
    image: hashicorp/consul
    container_name: consul
    restart: unless-stopped
    logging: *loki-logging
    volumes:
     - ./consul/server.json:/consul/config/server.json
     - ./consul_data:/consul/data
    ports:
      - '8500:8500'
      - '8600:8600/udp'
      - '8600:8600/tcp'
    networks:
      - monitoring

  nginx:
    image: nginx
    container_name: nginx
    restart: unless-stopped
    volumes:
      - ./nginx_data:/var/log/nginx
    ports:
      - '8080:80'
    networks:
      - monitoring

networks:
  monitoring:
    driver: bridge
